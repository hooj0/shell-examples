#!/bin/sh

# =================================================================
#		awk —— 分隔文本输出
# =================================================================
# awk 是文本操作最有用的命令。它按行处理整个文件，它默认用空格把每一行分隔成很多字段。
# 最常用的语法是：
# awk '/search_pattern/ { action_to_take_if_pattern_matches; }' file_to_parse
# -----------------------------------------------------------------




# =================================================================
#	 示例1：以 /etc/passwd 文件为例，该文件包含以下数据：
# =================================================================
# 我们想从这个文件中过滤出每一行的 username 部分。
# -F 参数用来指明用来把行内内容分隔的分隔符。
# 这个例子中，我们用:来分隔。{ print $1 } 意思是输出行内第一个匹配的字段。

awk -F ':' '{print $1}' /etc/passwd

# output:
#-------------------------------------------------------------------
# 


# =================================================================
#	 示例：计算文本文件第三列中所有数的和（可能比同等作用的 Python 代码快三倍且代码量少三倍）
# =================================================================
awk '{ x += $3 } END { print x }' myfile

# output:
#-------------------------------------------------------------------
#



# =================================================================
#	 示例：统计当前目录下文件或文件夹的大小（第5列）总和
# =================================================================
ll | awk '{ x += $5 } END { print x }'

#
find . -type f -ls | awk '{ x += $7 } END { print x }'

# output:
#-------------------------------------------------------------------
#



# =================================================================
#	 示例：统计当前目录下文件的大小（第7列）总和
# =================================================================
find . -type f -ls | awk '{ x += $7 } END { print x }'

# output:
#-------------------------------------------------------------------
#







read exits