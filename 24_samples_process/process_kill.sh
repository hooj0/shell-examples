#!/bin/sh
# author:   hoojo
# email:    hoojo_@126.com
# github:   https://github.com/hooj0
# create:   2018-07-20
# copyright by hoojo@2018
# @changelog Added process `kill` shell command example




# =================================================================
#		kill —— 结束指定 PID 代表的进程
# =================================================================
# 通过 kill 命令给进程发送信号
# =================================================================
# 常用信号
# -----------------------------------------------------------------
# 编号 	名字 	含义
# -----------------------------------------------------------------
# 1 	HUP 	挂起。这是美好往昔的残留部分，那时候终端机通过电话线和调制解调器连接到 远端的计算机。
#               这个信号被用来告诉程序，控制的终端机已经“挂起”。
#               通过关闭一个终端会话，可以展示这个信号的作用。
#               在当前终端运行的前台程序将会收到这个信号并终止。
#               许多守护进程也使用这个信号，来重新初始化。
#               这意味着，当一个守护进程收到这个信号后， 这个进程会重新启动，
#               并且重新读取它的配置文件。Apache 网络服务器守护进程就是一个例子。
# -----------------------------------------------------------------
# 2 	INT 	中断。实现和 Ctrl-c 一样的功能，由终端发送。通常，它会终止一个程序。
# -----------------------------------------------------------------
# 9 	KILL 	杀死。这个信号很特别。尽管程序可能会选择不同的方式来处理发送给它的 信号，
#               其中也包含忽略信号，但是 KILL 信号从不被发送到目标程序。而是内核立即终止 这个进程。
#               当一个进程以这种方式终止的时候，它没有机会去做些“清理”工作，或者是保存工作。
#               因为这个原因，把 KILL 信号看作最后一招，当其它终止信号失败后，再使用它。
# -----------------------------------------------------------------
# 15 	TERM 	终止。这是 kill 命令发送的默认信号。如果程序仍然“活着”，可以接受信号，那么 这个它会终止。
# -----------------------------------------------------------------
# 18 	CONT 	继续。在一个停止信号后，这个信号会恢复进程的运行。
# -----------------------------------------------------------------
# 19 	STOP 	停止。这个信号导致进程停止运行，而不是终止。像 KILL 信号，它不被 发送到目标进程，因此它不能被忽略。
# -----------------------------------------------------------------
#      其它常用信号
# =================================================================
# 编号 	名字 	含义
# -----------------------------------------------------------------
# 3 	QUIT 	退出
# -----------------------------------------------------------------
# 11 	SEGV 	段错误。如果一个程序非法使用内存，就会发送这个信号。
#               也就是说， 程序试图写入内存，而这个内存空间是不允许此程序写入的。
# -----------------------------------------------------------------
# 20 	TSTP 	终端停止。当按下 Ctrl-z 组合键后，终端发送这个信号。
#               不像 STOP 信号， TSTP 信号由目标进程接收，且可能被忽略。
# -----------------------------------------------------------------
# 28 	WINCH 	改变窗口大小。当改变窗口大小时，系统会发送这个信号。
#               一些程序，像 top 和 less 程序会响应这个信号，按照新窗口的尺寸，刷新显示的内容。
# -----------------------------------------------------------------



# =================================================================
#	 示例1：杀死tomcat进程
# =================================================================
ps -ef | grep tomcat

kill 12203

# output:
#-------------------------------------------------------------------
# 


# =================================================================
#	 示例2：挂起某个进程，后台进程接受一个挂起信号
# =================================================================
# 后台运行
tomcat &

# 挂起 13546 进程，接受一个挂起信号
kill -1 13546

# 采用信号名称的方式挂起
kill -HUP 13546

# output:
#-------------------------------------------------------------------
# [1] 13546
# [1]+ Hangup         tomcat




# =================================================================
#	 示例：发送信号，查询进程状态
# =================================================================
kill -SIGINT 13608

# output:
#-------------------------------------------------------------------
#



# =================================================================
#	 示例：查看信号列表
# =================================================================
kill -l

# output:
#-------------------------------------------------------------------
#  1) SIGHUP	 2) SIGINT	 3) SIGQUIT	 4) SIGILL	 5) SIGTRAP
# 6) SIGABRT	 7) SIGBUS	 8) SIGFPE	 9) SIGKILL	10) SIGUSR1
#11) SIGSEGV	12) SIGUSR2	13) SIGPIPE	14) SIGALRM	15) SIGTERM
#16) SIGSTKFLT	17) SIGCHLD	18) SIGCONT	19) SIGSTOP	20) SIGTSTP
#21) SIGTTIN	22) SIGTTOU	23) SIGURG	24) SIGXCPU	25) SIGXFSZ
#26) SIGVTALRM	27) SIGPROF	28) SIGWINCH	29) SIGIO	30) SIGPWR
#31) SIGSYS	34) SIGRTMIN	35) SIGRTMIN+1	36) SIGRTMIN+2	37) SIGRTMIN+3
#38) SIGRTMIN+4	39) SIGRTMIN+5	40) SIGRTMIN+6	41) SIGRTMIN+7	42) SIGRTMIN+8
#43) SIGRTMIN+9	44) SIGRTMIN+10	45) SIGRTMIN+11	46) SIGRTMIN+12	47) SIGRTMIN+13
#48) SIGRTMIN+14	49) SIGRTMIN+15	50) SIGRTMAX-14	51) SIGRTMAX-13	52) SIGRTMAX-12
#53) SIGRTMAX-11	54) SIGRTMAX-10	55) SIGRTMAX-9	56) SIGRTMAX-8	57) SIGRTMAX-7
#58) SIGRTMAX-6	59) SIGRTMAX-5	60) SIGRTMAX-4	61) SIGRTMAX-3	62) SIGRTMAX-2
#63) SIGRTMAX-1	64) SIGRTMAX





read exits