#!/bin/sh
# author:   hoojo
# email:    hoojo_@126.com
# github:   https://github.com/hooj0
# create:   2018-07-24
# copyright by hoojo@2018
# @changelog Added basic `shell env` shell command example



# =========================================================================
#       shell —— 系统环境
# =========================================================================
# shell 会话类型：一个是登录 shell 会话，另一个是非登录 shell 会话。
#
# 登录 shell 会话会在其中提示用户输入用户名和密码；例如，我们启动一个虚拟控制台会话。
# 非登录 shell 会话通常当我们在 GUI 下启动终端会话时出现。
# -------------------------------------------------------------------------
# 登录 shell 会读取一个或多个启动文件：
# =========================================================================
# 文件 	内容
# -------------------------------------------------------------------------
# /etc/profile 	    应用于所有用户的全局配置脚本。
# ~/.bash_profile 	用户个人的启动文件。可以用来扩展或重写全局配置脚本中的设置。
# ~/.bash_login 	如果文件 ~/.bash_profile 没有找到，bash 会尝试读取这个脚本。
# ~/.profile 	    如果文件 ~/.bash_profile 或文件 ~/.bash_login 都没有找到，
#                   bash 会试图读取这个文件。
#                   这是基于 Debian 发行版的默认设置，比方说 Ubuntu。
# -------------------------------------------------------------------------
# -------------------------------------------------------------------------
# 非登录 shell 会话的启动文件：
# -------------------------------------------------------------------------
# 文件 	内容
# -------------------------------------------------------------------------
# /etc/bash.bashrc 	应用于所有用户的全局配置文件。
# ~/.bashrc 	    用户个人的启动文件。可以用来扩展或重写全局配置脚本中的设置。
# =========================================================================
# /etc/profile : 在登录时,操作系统定制用户环境时使用的第一个文件 ,此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行。
# /etc/environment : 在登录时操作系统使用的第二个文件, 系统在读取你自己的profile前,设置环境文件的环境变量。
# ~/.profile :  在登录时用到的第三个文件 是.profile文件,每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件。
# /etc/bashrc : 为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取.
# ~/.bashrc : 该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该该文件被读取。
# -------------------------------------------------------------------------




# =========================================================================
# 示例：启动文件的内容
# =========================================================================
less ~/.bash_profile

# 可以看到 bash_profile 文件引入文件 . ~/.bashrc 的内容
# 并且在 PATH 变量中 PATH=$PATH:$HOME/bin，引入$HOME/bin  目录下的二进制文件
# export PATH，shell 让这个 shell 的子进程可以使用 PATH 变量的内容

# output:
#---------------------------------------------------------------------------
# 


# ==========================================================================
# 示例：在 .bashrc 中添加如下配置
#---------------------------------------------------------------------------
# 文本行 	            含义
#---------------------------------------------------------------------------
# umask 0002 	                    设置掩码来解决共享目录的问题。
# export HISTCONTROL=ignoredups 	使得 shell 的历史记录功能忽略一个命令，如果相同的命令已被记录。
# export HISTSIZE=1000 	            增加命令历史的大小，从默认的 500 行扩大到 1000 行。
# alias l.='ls -d .* --color=auto' 	创建一个新命令，叫做'l.'，这个命令会显示所有以点开头的目录项。
# alias ll='ls -l --color=auto' 	创建一个叫做'll'的命令，这个命令会显示长格式目录列表。
# =========================================================================

## Change umask to make directory sharing easier
umask 0002
## Ignore duplicates in command history and increase
## history size to 1000 lines
export HISTCONTROL=ignoredups
export HISTSIZE=1000
## Add some helpful aliases
alias l.='ls -d .* --color=auto'
alias ll='ls -l --color=auto'

# 激活修改，让配置立即生效
source .bashrc

# output:
#---------------------------------------------------------------------------
#



# ==========================================================================
# 示例：编辑bash文件，添加环境变量
# ==========================================================================
vi ~/.bashrc
PS1='\[\e]0;\u:\w\a\]\n\[\e[32m\]\u@\h \[\e[35m\]\s\[\e[0m\] \[\e[33m\]\w\[\e[0m\]\n$ '

source ~/.bashrc




read exits
